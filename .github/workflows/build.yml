name: build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      platform:
        required: true
        type: string
      target:
        required: true
        type: string
      build-args:
        required: false
        type: string
      release-id:
        required: false
        type: string
      upload-artifacts:
        required: false
        type: boolean

jobs:
  build:
    permissions:
      contents: write
    runs-on: ${{ inputs.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set application version
        shell: bash
        run: |
          version="${{ inputs.version }}"
          stripped="$(echo ${version} | sed -E 's/^v//')"
          npx tauri-version --no-git --no-lock "${stripped}"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        if: startsWith(inputs.platform, 'macos')

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install additional system dependencies (Linux)
        if: startsWith(inputs.platform, 'ubuntu-22')
        run: |-
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install additional system dependencies (Linux)
        if: startsWith(inputs.platform, 'ubuntu-24')
        run: |-
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-0=2.44.0-2 \
            libwebkit2gtk-4.1-dev=2.44.0-2 \
            libjavascriptcoregtk-4.1-0=2.44.0-2 \
            libjavascriptcoregtk-4.1-dev=2.44.0-2 \
            gir1.2-javascriptcoregtk-4.1=2.44.0-2 \
            gir1.2-webkit2-4.1=2.44.0-2 \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: rustup install target
        if: ${{ inputs.target != '' }}
        run: rustup target add ${{ inputs.target }}

      - id: tauri-build
        name: Build with tauri-action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NO_STRIP: ${{ startsWith(inputs.platform, 'ubuntu') }}
        with:
          args: ${{ inputs.build-args }} ${{ inputs.target != '' && '--target' || ''  }} ${{ inputs.target }}
          releaseId: ${{ inputs.release-id }}

      - name: Setup gh actions artifact client
        uses: lhotari/gh-actions-artifact-client@v2

      - name: Upload binaries (Windows)
        shell: bash
        if: startsWith(inputs.platform, 'windows')
        run: |
          find src-tauri/target/release/bundle -name "*.exe" | while read -r file; do
            name=$(basename "$file")
            patched_name=$(echo $name | sed -E 's/[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?/${{ github.sha }}/')
            echo "Uploading $name, file: $file"
            # TODO zip the file before upload
            gh-actions-artifact-client.js upload "$patched_name" --retentionDays=7 < "$file"
          done

      - name: Upload binaries
        if: ${{ !startsWith(inputs.platform, 'windows') }}
        run: |
          find src-tauri/target/${{ inputs.target || 'release' }} -type f -name "*.rpm" -o -name "*.deb" -o -name "*.AppImage" -o -name "*.dmg" | while read -r file; do
            name=$(basename "$file")
            patched_name=$(echo $name | sed -E 's/[0-9]+\.[0-9]+\.[0-9]+(-[0-9]+)?/${{ github.sha }}/')
            echo "Uploading $name, file: $file"
            zip -j - "$file" | gh-actions-artifact-client.js upload "$patched_name" --retentionDays=7
          done
